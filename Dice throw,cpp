Test Cases Passed: 
102 /102
Your Total Score: 
78
Total Time Taken: 
0.01
Correct Submission Count: 
3
Attempts No.: 
5



class Solution {
  public:
  /*long long sol(int face ,int dice ,int target){
      if(target!=0 && dice==0){
          return 0;
      }
      if(target<0){
          return 0;
      }
      if(target==0 && dice==0){
          return 1;
      }
      if(target==0&& dice!=0){
          return 0;
      }
     long long ans=0;
      for(int i=1;i<=face;i++){

          ans=ans+sol(face,dice-1,target-i);
      }
      return ans;
  }*/
     /* long long sol(int face ,int dice ,int target,vector<vector<long long>>&dp){
          if(target!=0 && dice==0){
              return 0;
          }
          if(target<0){
              return 0;
          }
          if(target==0 && dice==0){
              return 1;
          }
          if(target==0&& dice!=0){
              return 0;
          }
          if(dp[dice][target]!=-1){
              return dp[dice][target];
          }
         long long ans=0;
          for(int i=1;i<=face;i++){
    
              ans=ans+sol(face,dice-1,target-i,dp);
          }
          dp[dice][target]=ans;
          return dp[dice][target];
      }*/
      /*long long sol(int M ,int N ,int t){
      vector<vector<long long>>dp(N+1,vector<long long>(t+1,0));
          dp[0][0]=1;
          for(int dice=1;dice<=N;dice++){
              for(int target=1;target<=t;target++){
                  long long ans=0;
                  
                      for(int i=1;i<=M;i++){
                if(target-i>=0)
                          ans=ans+dp[dice-1][target-i];

                      }
                  
                                               dp[dice][target]=ans;
              }
          }
           return dp[N][t];
      }
      
      */
      
      long long sol(int M ,int N ,int t){
      
      vector<long long>next(t+1,0);
      vector<long long>cur(t+1,0);
          next[0]=1;
          for(int dice=1;dice<=N;dice++){
              for(int target=1;target<=t;target++){
                  long long ans=0;
                  
                      for(int i=1;i<=M;i++){
                         if(target-i>=0)
                          ans=ans+next[target-i];

                      }
                  
                                               cur[target]=ans;
              }
              next=cur;
          }
           return next[t];
      }
    long long noOfWays(int M , int N , int X) {
        // code here
        //vector<vector<long long>>dp(N+1,vector<long long>(X+1,-1));
        return sol(M,N,X);
    }
};
